<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CVxUzgAAAABJRU5ErkJggg==
</value>
  </data>
</root>