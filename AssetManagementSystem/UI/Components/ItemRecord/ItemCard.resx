<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WtXpHJEAAAAASUVORK5CYII=
</value>
  </data>
</root>